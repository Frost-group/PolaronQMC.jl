using Revise
using PolaronQMC
using Statistics
using Plots
using PolaronMobility
using LaTeXStrings
include("GeneralPIMC.jl")

begin
    
    mean_energy, jacknife_errors, comparison_energy, energies, positions, correlations, acceptance_rates, adjuster_values, equilibrium_skip, observables_skip, version, potential = generalPIMC(
                0.1, #Temperature
                1.0, # mass
                1.0, # ω (has to be float)
                3.0, # α (has to be float)
                1, # no of particles
                3, # number of n_dimensions
                "Primitive", # regime type
                false, # fixing beads or not
                0.1, # fixed_τ
                500, # n_beads (if τ is not fixed)
                30000, # No. of steps
                0, # number of thermalisation
                "Single", # movers
                "Frohlich", # potential type
                "Virial", # estimators
                false, # Not quick steps
                false, # Not threading
                1.0, # Start Range
                1,
                1, 
                0.005, # observable skips
                0.5, # equilibrium skips
                1
                );
end

begin
    # Define plot parameters
    default(fontfamily="Times New Roman",
        titlefont = (16, "Computer Modern"),
        guidefont = (18, "Computer Modern"),
        tickfont = (12, "Computer Modern"),
        legendfontsize = 12,
        linewidth=2, framestyle=:box, label=nothing, grid=true)

    # Energy/Position Plots
    energy_plot = plot(energies, ylabel="Energy", xlab = "Sweeps")
    hline!([comparison_energy], linestyle=:dash)
    energy_hist = histogram(energies, ylab="Frequencies", xlab="Energy")
    positions_flatten = collect(Iterators.flatten(positions))
    posplot = histogram(positions_flatten, xlab = "Position")

    # Correlation cut-off set by n
    #corr_plot = plot(1:n_beads-1, corr_mean[1:n_beads-1], yerror = corr_std, ylabel="G(Δτ)", xlabel = "Δτ")

    # Autocorrelation plot
    autoCorrelation1 = autoCorrelation(energies, observables_skip)
    auto_plot = plot(1:length(energies)-1, autoCorrelation1[1:length(energies)-1], ylabel=L"C_{k}", xlab = "k / $observables_skip\$ n\$")
    println("correlation time is:", autoCorrelationTime(autoCorrelation1))

    # Displaying plot command
    #display(energy_hist)
    display(energy_plot)
    display(posplot)
    #display(auto_plot)

    save("data_arr/$(potential)/$(string(Symbol(potential)))_T$(T)_nsteps$(n_steps)_v$(version)_beads$(n_beads).jld", "data", data, "energies", energies, "comparison_energy", comparison_energy, 
        "correlations", correlations, "jacknife_errors", jacknife_errors, 
        "equilibrium_skip", equilibrium_skip, "observables_skip", observables_skip)
end



#=
begin
    
end
=#